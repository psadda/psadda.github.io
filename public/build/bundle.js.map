{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Medications.js","../../src/Patient.js","../../src/epic_parser.js","../../src/templates/patient.js","../../src/lab_utils.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if (typeof $$scope.dirty === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += \" \" + name + \"=\" + JSON.stringify(String(value)\n                .replace(/\"/g, '&#34;')\n                .replace(/'/g, '&#39;'));\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","export default class Medications {\r\n\r\n\tconstructor(medications) {\r\n\t\tthis.medications = medications || [];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {!Medications} oldMeds\r\n\t * @return {!Medications}\r\n\t */\r\n\tdiff(oldMeds) {\r\n\t\tconst diffedMeds = [];\r\n\r\n\t\t// Newly started medications and continued medications\r\n\t\tfor (const med of this.medications) {\r\n\t\t\tmed.isNew = !oldMeds.find(med);\r\n\t\t\tmed.isDiscontinued = false;\r\n\t\t\tdiffedMeds.push(med);\r\n\t\t}\r\n\r\n\t\t// Discontinued medications\r\n\t\tfor (const med of oldMeds.medications) {\r\n\t\t\tif (!this.find(med)) {\r\n\t\t\t\tmed.isNew = false;\r\n\t\t\t\tmed.isDiscontinued = false;\r\n\t\t\t\tdiffedMeds.push(med);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new Medications(diffedMeds);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {!Object} medication\r\n\t * @return {?Object}\r\n\t */\r\n\tfind(medication) {\r\n\t\treturn this.medications.find(e => {\r\n\t\t\treturn e.name == medication.name &&\r\n\t\t\t\t   e.dose == medication.dose &&\r\n\t\t\t\t   e.route == medication.route &&\r\n\t\t\t\t   e.frequency == medication.frequency;\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","import Medications from './Medications.js';\r\n\r\n// TODO: Remove this function\r\nfunction diffMeds(current, old) {\r\n\treturn new Medications(current).diff(new Medications(old)).medications;\r\n}\r\n\r\nfunction appendDateListEntry(dateList, newEntry, dateOfEntry) {\r\n\tdateList.push({date: dateOfEntry, ...newEntry});\r\n}\r\n\r\nexport default class Patient {\r\n\r\n\tconstructor(other = {}) {\r\n\t\tthis.vitals = other.vitals || [];\r\n\t\tthis.ios = other.ios || [];\r\n\t\tthis.medications = other.medications || [];\r\n\t\tthis.labs = other.labs || new Map();\r\n\t\tthis.imaging = other.imaging || [];\r\n\t\tthis.problems = other.problems || [];\r\n\t}\r\n\r\n\taddDayEntry(entry) {\r\n\t\tthis.name = entry.name;\r\n\t\tconst today = new Date().toDateString();\r\n\t\tappendDateListEntry(this.vitals, entry.vitals, today);\r\n\t\tappendDateListEntry(this.ios, entry.ios, today);\r\n\t\tthis.medications = diffMeds(entry.medications, this.medications);\r\n\t\t//appendDateListEntry(this.labs, entry.labs);\r\n\t\tthis.labs = entry.labs;\r\n\t\t//appendDateListEntry(this.imaging, entry.imaging);\r\n\t\tthis.imaging = entry.imaging;\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\tconst data = {\r\n\t\t\t\"name\": this.name,\r\n\t\t\t\"vitals\": Array.from(this.vitals.entries()),\r\n\t\t\t\"ios\": Array.from(this.ios.entries()),\r\n\t\t\t\"medications\": this.medications,\r\n\t\t\t\"labs\": Array.from(this.labs.entries()),\r\n\t\t\t\"imaging\": Array.from(this.imaging.entries())\r\n\t\t};\r\n\t\treturn JSON.stringify(this);\r\n\t}\r\n\r\n\tstatic fromJSON() {\r\n\t\tconst data = JSON.parse(string);\r\n\t\tthis.name = data.name;\r\n\t\tthis.vitals = new Map(data.vitals);\r\n\t\tthis.ios = new Map(data.ios);\r\n\t\tthis.medications = new Map(data.medications);\r\n\t\tthis.labs = new Map(data.labs);\r\n\t\tthis.imaging = new Map(data.imaging);\r\n\t}\r\n}\r\n","/**\r\n @returns {String}\r\n */\r\nexport default function parsePatient(text) {\r\n\treturn {\r\n\t\t\"name\": parseName(text),\r\n\t\t\"vitals\": parseVitals(text),\r\n\t\t\"ios\": parseIOs(text),\r\n\t\t\"medications\": parseMeds(text),\r\n\t\t\"labs\": parseLabs(text),\r\n\t\t\"imaging\": parseImaging(text)\r\n\t};\r\n}\r\n\r\nfunction findBlock(text, pattern) {\r\n\tlet result = text.match(pattern);\r\n\tif (result) return result[1];\r\n\treturn null;\r\n}\r\n\r\n/**\r\n @returns {String}\r\n */\r\nfunction parseName(text) {\r\n\treturn findBlock(text, /^Pt|Patient:\\s*(.+?)$/im);\r\n}\r\n\r\nconst FIND_MEDS_PATTERN = /Scheduled[^:]*:([\\s\\S]*?)\\n\\W+\\n/i;\r\nconst PARSE_MEDS_PATTERN = /^•\\s+(.*?)\\t(.*?)\\t(.*?)\\t(.*?)$/gm;\r\n\r\n/**\r\n @returns {Array}\r\n */\r\nfunction parseMeds(text) {\r\n\tconst block = findBlock(text, FIND_MEDS_PATTERN);\r\n\tif (!block) return [];\r\n\r\n\tconst matches = block.matchAll(PARSE_MEDS_PATTERN);\r\n\treturn Array.from(matches, (e) => {\r\n\t\treturn {\r\n\t\t\t\"name\": e[1].toLowerCase(),\r\n\t\t\t\"dose\": e[2],\r\n\t\t\t\"route\": e[3].toLowerCase(),\r\n\t\t\t\"frequency\": e[4].toLowerCase()\r\n\t\t};\r\n\t});\r\n}\r\n\r\n/*\r\nParse old style vitals (.vsranges)\r\n\r\nconst FIND_VITALS_PATTERN = /Temp:\\s+\\[([\\s\\S]*?)\\n\\W+\\n/i;\r\nconst PARSE_VITALS_PATTERN = /^([A-Z]+):\\s+\\[(.*?)-(.*?)\\]\\s+(.*?)$/igm;\r\n\r\nfunction parseVitals(text) {\r\n\tconst block = findBlock(text, FIND_VITALS_PATTERN);\r\n\tif (!block) return null;\r\n\r\n\tconst matches = block.matchAll(PARSE_VITALS_PATTERN);\r\n\r\n\tconst vitals = Array.from(matches, (e) => {\r\n\t\treturn [\r\n\t\t\tcanonicalVitalName(e[1].toLowerCase()),\r\n\t\t\t{\r\n\t\t\t\t\"current\": parseInt(e[4]),\r\n\t\t\t\t\"min\": parseInt(e[2]),\r\n\t\t\t\t\"max\": parseInt(e[3])\r\n\t\t\t}\r\n\t\t];\r\n\t});\r\n\r\n\tconst temp = block.match()\r\n\r\n\treturn Object.fromEntries(vitals);\r\n}\r\n*/\r\n\r\nconst FIND_VITALS_PATTERN = /Patient Vitals for the past 24 hrs:([\\s\\S]*?)\\n\\W+\\n/i;\r\nconst PARSE_VITALS_PATTERN = /^([A-Z]+):\\s+\\[(.*?)-(.*?)\\]\\s+(.*?)$/igm;\r\n\r\nfunction parseBP(rows) {\r\n\tconst bps = rows.map(row => row[1].trim());\r\n\tconst currentBP = bps[bps.length - 1];\r\n\tbps.sort((a, b) => parseInt(a) - parseInt(b)); // Sort by systolic BP\r\n\treturn {\r\n\t\t\"current\": currentBP,\r\n\t\t\"min\": bps[0],\r\n\t\t\"max\": bps[bps.length - 1]\r\n\t};\r\n}\r\n\r\nconst FLOAT_PATTERN = /\\d+(\\.\\d+)?/;\r\n\r\nfunction findFloat(string) {\r\n\tconst match = string.match(FLOAT_PATTERN);\r\n\treturn match ? match[0] : null;\r\n}\r\n\r\nfunction parseVitalSign(rows, column) {\r\n\tconst values = rows.map(row => row[column]).\r\n\t                    map(findFloat).\r\n\t                    map(parseFloat).\r\n\t                    filter(e => !isNaN(e));\r\n\treturn {\r\n\t\t\"current\": values[values.length - 1],\r\n\t\t\"min\": Math.min(...values),\r\n\t\t\"max\": Math.max(...values)\r\n\t};\r\n}\r\n\r\nfunction parseVitals(text) {\r\n\tconst block = findBlock(text, FIND_VITALS_PATTERN);\r\n\tif (!block) return null;\r\n\r\n\tlet rows = block.trim().split(/\\r?\\n/);\r\n\trows.shift(); // Ignore header line\r\n\trows = rows.map(row => row.split(\"\\t\"));\r\n\r\n\treturn {\r\n\t\t\"bp\" : parseBP(rows, 1),\r\n\t\t\"temp\" : parseVitalSign(rows, 2),\r\n\t\t\"hr\" : parseVitalSign(rows, 4),\r\n\t\t\"rr\" : parseVitalSign(rows, 5),\r\n\t\t\"spo2\" : parseVitalSign(rows, 6),\r\n\t};\r\n}\r\n\r\n/**\r\n * Map the result name parsed out of the chart to a standardized name that is\r\n * identical acros EMR systems.\r\n */\r\nfunction canonicalVitalName(name) {\r\n\tname = name.toLowerCase();\r\n\treturn CANONICAL_VITAL_NAMES[name] || name;\r\n}\r\n\r\nconst FIND_IOS_PATTERN = /Intake\\/Output Summary([\\s\\S]*?)\\n\\W+\\n/i;\r\n\r\nfunction parseIOsValue(block, pattern) {\r\n\tconst match = block.match(pattern);\r\n\treturn match ? parseInt(match[1]) : undefined;\r\n}\r\n\r\nfunction parseIOs(text) {\r\n\tconst block = findBlock(text, FIND_IOS_PATTERN);\r\n\tif (!block) return null;\r\n\r\n\treturn {\r\n\t\t\"in\": parseIOsValue(block, /Intake\\s+(-?\\d+)/i),\r\n\t\t\"out\": parseIOsValue(block, /Output\\s+(-?\\d+)/i),\r\n\t\t\"net\": parseIOsValue(block, /Net\\s+(-?\\d+)/i)\r\n\t};\r\n}\r\n\r\nfunction parseImaging() {\r\n}\r\n\r\nconst FIND_LABS_PATTERN = /^Recent Results([\\s\\S]*?)\\n\\W+\\n/im;\r\nconst FIND_RESULT_PATTERN = /^(.+)\\n\\tCollection Time:\\s+(.+)$/igm;\r\nconst PARSE_RESULT_PATTERN = /^.+\\n\\tCollection Time:\\s+.+$/igm;\r\n\r\nfunction parseLabs(text) {\r\n\tlet block = findBlock(text, FIND_LABS_PATTERN);\r\n\tif (!block) return [];\r\n\r\n\tlet resultHeaders = Array.from(block.matchAll(FIND_RESULT_PATTERN));\r\n\tlet resultInfos = block.split(PARSE_RESULT_PATTERN);\r\n\tresultInfos.shift();\r\n\r\n\tlet zipped = resultHeaders.map((v, i) => [v, resultInfos[i]]);\r\n\treturn zipped.flatMap(([resultHeader, resultInfo]) => {\r\n\t\tlet [, resultName, resultTime] = resultHeader;\r\n\t\tlet result = parseResult(resultName, resultInfo);\r\n\t\tlet resultDate = new Date(resultTime).toDateString();\r\n\t\tfor (const e of result) e.date = resultDate;\r\n\t\treturn result;\r\n\t}).groupBy('date');\r\n}\r\n\r\nArray.prototype.groupBy = function(property) {\r\n\tconst groups = new Map();\r\n\tlet key;\r\n\tfor (const element of this) {\r\n\t\tlet key = element[property];\r\n\t\tif (!groups.has(key)) groups.set(key, []);\r\n\t\tgroups.get(key).push(element);\r\n\t}\r\n\treturn groups;\r\n};\r\n\r\nconst RESULT_VALUE_PATTERN = /^(<|>)?\\s*(\\d+(?:\\.\\d+)?)(?:\\s+\\((H|L)\\))?/i;\r\n\r\n/**\r\n * An Epic result line can be textual or numeric. A numeric result line\r\n * consists of at least one part and up to three parts:\r\n *\r\n *  * Value (required) -- The numeric result.\r\n *  * Abnormality (optional) -- A letter signifying that the value is outside\r\n *    the normal/physiologic range. This is either \"H\" or \"L\".\r\n *  * Qualifier (optional) -- A symbol signifying that the value is outside\r\n *    of the measurable range. This symbol is either \">\" or \"<\".\r\n */\r\nfunction parseResultLine(line) {\r\n\tlet [name, rest] = line.trim().split(\"\\t\");\r\n\tname = canonicalResultName(name);\r\n\tconst match = rest.match(RESULT_VALUE_PATTERN);\r\n\tif (match) {\r\n\t\tlet [, qualifier, value, abnormality] = match;\r\n\t\tif (qualifier) value = qualifier + \" \" + value;\r\n\t\treturn { \"name\": name, \"value\": value, \"abnormality\": abnormality };\r\n\t} else {\r\n\t\treturn { \"name\": name, \"value\": rest };\r\n\t}\r\n}\r\n\r\n/**\r\n * Map the result name parsed out of the chart to a standardized name that is\r\n * identical acros EMR systems.\r\n */\r\nfunction canonicalResultName(name) {\r\n\treturn name;\r\n}\r\n\r\nconst MULTIPART_LABS = new Set([\r\n\t\"cmp\",\r\n\t\"cbc with differential\",\r\n\t\"basic metabolic panel\"\r\n]);\r\n\r\nfunction parseResult(type, text) {\r\n\tlet lines = text.trim().split(\"\\n\");\r\n\tif (MULTIPART_LABS.has(type.toLowerCase())) {\r\n\t\tlines.shift();\r\n\t\treturn lines.map(parseResultLine);\r\n\t} else if (type == \"Surgical Pathology\") {\r\n\t\treturn [];\r\n\t} else if (type.toLowerCase().startsWith(\"ekg 12 lead\")) {\r\n\t\treturn [];\r\n\t} else {\r\n\t\treturn [parseResultLine(lines[0])];\r\n\t}\r\n}\r\n","export default function render(context, h) {\r\nlet b = '';\r\nlet c = context;\r\nb += \"<article class=\\\"patient\\\"> <h2 class=\\\"patient-name\\\">\";\r\nb += c.name;\r\nb += \"</h2> <div class=\\\"patient-info\\\"> <section class=\\\"patient-vitals\\\"> <h3>Vitals</h3> <table> <tr><th>Date</th><th>Temp</th><th>RR</th><th>HR</th><th>BP</th></tr> \";\r\nfor (const e of c.vitals) {\r\nc = e;\r\nb += \" <tr> <td>\";\r\nb += h.date(c.date);\r\nb += \"</td> <td>\";\r\nif (c.temp) {\r\nb += c.temp.current;\r\nb += \"°F (\";\r\nb += c.temp.min;\r\nb += \"°F - \";\r\nb += c.temp.max;\r\nb += \"°F)\";\r\n}\r\nb += \"</td> <td>\";\r\nif (c.rr) {\r\nb += c.rr.current;\r\nb += \" (\";\r\nb += c.rr.min;\r\nb += \" - \";\r\nb += c.rr.max;\r\nb += \")\";\r\n}\r\nb += \"</td> <td>\";\r\nif (c.hr) {\r\nb += c.hr.current;\r\nb += \" (\";\r\nb += c.hr.min;\r\nb += \" - \";\r\nb += c.hr.max;\r\nb += \")\";\r\n}\r\nb += \"</td> <td>\";\r\nif (c.bp) {\r\nb += c.bp.current;\r\nb += \" (\";\r\nb += c.bp.min;\r\nb += \" - \";\r\nb += c.bp.max;\r\nb += \")\";\r\n}\r\nb += \"</td> </tr> \";\r\n}\r\nc = context;\r\nb += \" </table> <h3>Inputs/Outputs</h3> <table> <tr><th>Date</th><th>In</th><th>Out</th><th>Net</th></tr> \";\r\nfor (const e of c.ios) {\r\nc = e;\r\nb += \" <tr> <td>\";\r\nb += h.date(c.date);\r\nb += \"</td> <td>\";\r\nif (c.in) {\r\nb += c.in;\r\nb += \" mL\";\r\n}\r\nb += \"</td> <td>\";\r\nif (c.out) {\r\nb += c.out;\r\nb += \" mL\";\r\n}\r\nb += \"</td> <td>\";\r\nif (c.net) {\r\nb += c.net;\r\nb += \" mL\";\r\n}\r\nb += \"</td> </tr> \";\r\n}\r\nc = context;\r\nb += \" </table> </section> <section class=\\\"patient-labs\\\"> <h3>Labs</h3> <ul> \";\r\nfor (const [date, values] of c.labs) {\r\nb += \" <li> <h4 class=\\\"patient-labs-date\\\">\";\r\nb += h.date(date);\r\nb += \"</h4> \";\r\nc = values;\r\nb += \" \";\r\nb += \"<div class=\\\"patient-labs-boxes\\\"> <div class=\\\"patient-labs-bmp\\\"> <svg viewBox=\\\"0 0 1 1\\\" preserveAspectRatio=\\\"none\\\"> <line x1=\\\"0\\\" y1=\\\"0.5\\\" x2=\\\"0.75\\\" y2=\\\"0.5\\\" stroke=\\\"black\\\" stroke-width=\\\"0.018\\\" /> <line x1=\\\"0.275\\\" y1=\\\"0\\\" x2=\\\"0.275\\\" y2=\\\"1\\\" stroke=\\\"black\\\" stroke-width=\\\"0.0065\\\" /> <line x1=\\\"0.55\\\" y1=\\\"0\\\" x2=\\\"0.55\\\" y2=\\\"1\\\" stroke=\\\"black\\\" stroke-width=\\\"0.0065\\\" /> <line x1=\\\"0.75\\\" y1=\\\"0.5\\\" x2=\\\"0.975\\\" y2=\\\"0.1\\\" stroke=\\\"black\\\" stroke-width=\\\"0.0085\\\" /> <line x1=\\\"0.75\\\" y1=\\\"0.5\\\" x2=\\\"0.975\\\" y2=\\\"0.9\\\" stroke=\\\"black\\\" stroke-width=\\\"0.0085\\\" /> </svg> <table> \";\r\nc = h.bmp(c, date);\r\nb += \" <tr> <td>\";\r\nif (c.na) {\r\nb += c.na;\r\n}\r\nb += \"</td> <td>\";\r\nif (c.cl) {\r\nb += c.cl;\r\n}\r\nb += \"</td> <td>\";\r\nif (c.bun) {\r\nb += c.bun;\r\n}\r\nb += \"</td> <td rowspan=\\\"2\\\">\";\r\nif (c.glu) {\r\nb += c.glu;\r\n}\r\nb += \"</td> </tr> <tr> <td>\";\r\nif (c.k) {\r\nb += c.k;\r\n}\r\nb += \"</td> <td>\";\r\nif (c.hco3) {\r\nb += c.hco3;\r\n}\r\nb += \"</td> <td>\";\r\nif (c.cr) {\r\nb += c.cr;\r\n}\r\nb += \"</td> </tr> \";\r\nc = values;\r\nb += \" </table> </div> <div class=\\\"patient-labs-cbc\\\"> <svg viewBox=\\\"0 0 1 1\\\" preserveAspectRatio=\\\"none\\\"> <line x1=\\\"0\\\" y1=\\\"0\\\" x2=\\\"1\\\" y2=\\\"1\\\" stroke=\\\"black\\\" stroke-width=\\\"0.0125\\\" /> <line x1=\\\"0\\\" y1=\\\"1\\\" x2=\\\"1\\\" y2=\\\"0\\\" stroke=\\\"black\\\" stroke-width=\\\"0.0125\\\" /> </svg> \";\r\nc = h.cbc(c, date);\r\nb += \" <div>\";\r\nif (c.hgb) {\r\nb += c.hgb;\r\n}\r\nb += \"</div> <div>\";\r\nif (c.wbc) {\r\nb += c.wbc;\r\n}\r\nb += \"</div><div>\";\r\nif (c.plt) {\r\nb += c.plt;\r\n}\r\nb += \"</div> <div>\";\r\nif (c.hct) {\r\nb += c.hct;\r\n}\r\nb += \"</div> \";\r\nc = values;\r\nb += \" </div> </div> <ul> </ul>\";\r\nb += \" \";\r\nc = context;\r\nb += \" </li> \";\r\n}\r\nb += \" </ul> </section> <section class=\\\"patient-medications\\\"> <h3>Medications</h3> <ul> \";\r\nfor (const e of c.medications) {\r\nc = e;\r\nb += \" <li> \";\r\nif (c.isNew) {\r\nb += \" <span class=\\\"patient-medication-started\\\">+</span> \";\r\n}\r\nb += \" \";\r\nif (c.isDiscontinued) {\r\nb += \" <span class=\\\"patient-medication-stopped\\\">&minus;</span> \";\r\n}\r\nb += \" \";\r\nb += c.name;\r\nb += \" \";\r\nb += c.dose;\r\nb += \" \";\r\nb += c.route;\r\nb += \" \";\r\nb += c.frequency;\r\nb += \" </li> \";\r\n}\r\nc = context;\r\nb += \" </ul> </section> </div> </article> \";\r\nreturn b;\r\n}\r\n","function findLabValue(labs, name) {\r\n\tconst result = labs.find(e => e.name == name);\r\n\treturn result ? result.value : result;\r\n}\r\n\r\nexport function bmp(labs) {\r\n\treturn {\r\n\t\t\"na\": findLabValue(labs, \"Sodium\"),\r\n\t\t\"k\": findLabValue(labs, \"Potassium\"),\r\n\t\t\"cl\": findLabValue(labs, \"Chloride\"),\r\n\t\t\"hco3\": findLabValue(labs, \"Bicarbonate\") ||\r\n\t\t        findLabValue(labs, \"Carbon Dioxide\"),\r\n\t\t\"bun\": findLabValue(labs, \"BUN\"),\r\n\t\t\"cr\": findLabValue(labs, \"Creatinine\"),\r\n\t\t\"glu\": findLabValue(labs, \"Glucose\")\r\n\t};\r\n}\r\n\r\nexport function cbc(labs) {\r\n\treturn {\r\n\t\t\"wbc\": findLabValue(labs, \"WBC\"),\r\n\t\t\"hgb\": findLabValue(labs, \"Hemoglobin\"),\r\n\t\t\"hct\": findLabValue(labs, \"Hematocrit\"),\r\n\t\t\"plt\": findLabValue(labs, \"Platelet Count\")\r\n\t};\r\n}\r\n","<script context=\"module\">\n\timport {cbc, bmp} from './lab_utils.js';\n\timport renderPatient from './templates/patient.js';\n\timport parsePatient from './epic_parser.js';\n\timport Patient from './Patient.js';\n\n\tlet nextPatientId = 1;\n\n\tconst MONTHS = [\n\t\t\"Jan\",\n\t\t\"Feb\",\n\t\t\"Mar\",\n\t\t\"Apr\",\n\t\t\"May\",\n\t\t\"Jun\",\n\t\t\"Jul\",\n\t\t\"Aug\",\n\t\t\"Sep\",\n\t\t\"Oct\",\n\t\t\"Nov\",\n\t\t\"Dec\"\n\t];\n\n\tfunction date(date) {\n\t\tlet [wday, month, day, year] = date.split(\" \");\n\t\tmonth = MONTHS.indexOf(month) + 1;\n\t\treturn month.toString() + \"/\" + day;\n\t}\n</script>\n\n<script>\n\tlet patients = [];\n\n\tfunction patientIndex(patientID) {\n\t\treturn patients.findIndex(e => e.id == patientID);\n\t}\n\n\tfunction patientID(event) {\n\t\treturn parseInt(event.target.closest('li').dataset.patientId);\n\t}\n\n\tconst RENDER_PATIENT_HELPERS = {bmp: bmp, cbc: cbc, date: date};\n\n\tfunction print() {\n\t\tlet rendered = '';\n\t\tfor (let patient of patients) {\n\t\t\trendered += renderPatient(patient, RENDER_PATIENT_HELPERS);\n\t\t}\n\t\tconst patientList = document.querySelector('.printable-patient-list');\n\t\tpatientList.innerHTML = rendered;\n\t}\n\n\tfunction addPatient(event) {\n\t\tconst text = event.target.value;\n\n\t\tif (text.trim().length === 0) return;\n\n\t\tevent.target.value = \"\";\n\t\tconst newPatient = new Patient()\n\t\tnewPatient.addDayEntry(parsePatient(text));\n\t\tnewPatient.id = nextPatientId;\n\t\tpatients = [...patients, newPatient];\n\t\tnextPatientId++;\n\t}\n\n\tfunction updatePatient(event) {\n\t\tconst text = event.target.value;\n\n\t\tif (text.trim().length === 0) return;\n\n\t\tevent.target.value = \"\";\n\t\tconst i = patientIndex(patientID(event));\n\t\tconst updatedPatients = patients.slice();\n\t\tupdatedPatients[i].addInfo(parsePatient(text));\n\t\tpatients = updatedPatients;\n\t}\n\n\tfunction removePatient(event) {\n\t\tconst i = patientIndex(patientID(event));\n\t\tpatients = [...patients.slice(0, i), ...patients.slice(i + 1)];\n\t}\n\n\tfunction toJSON() {\n\t\tJSON.stringify(patients.map(e => e.toJSON()));\n\t}\n\n\tfunction fromJSON(json) {\n\t\tpatients = JSON.parse(json).map(e => new Patient(e));\n\t}\n\n\tfunction toURL() {\n\t\tconst data = encodeURIComponent(toJSON());\n\t\treturn window.location.pathname + \"#\" + data;\n\t}\n\n\tfunction fromURL(urlFragment) {\n\t\tfromJSON(decodeURIComponent(urlFragment));\n\t}\n\n\tfunction copyPermalink(event) {\n\t\ttoURL();\n\t}\n\n\tfunction loadFromPermalink(event) {\n\t\tconst fragment = window.location.hash;\n\t\tif (fragment.length > 0) {\n\t\t\tfromURL(fragment.slice(1));\n\t\t}\n\t}\n</script>\n\n<style>\n\t.patients-editor > .patients {\n\t\tlist-style-type: none;\n\t\tpadding-left: 0;\n\t}\n\n\t.patients-editor > .patients > li {\n\t\tborder-radius: 2px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmin-width: 30rem;\n\t\tmax-width: 60rem;\n\t\tjustify-content: space-between;\n\t\tborder: 1px solid #ccc;\n\t\tvertical-align: middle;\n\t\tmargin: 0.3rem auto;\n\t}\n\n\t.patients-editor > .patients > li:last-child {\n\t\tdisplay: block;\n\t\ttext-align: center;\n\t\tmargin-top: 3rem;\n\t\tborder: none;\n\t}\n\n\t.patients-editor > .patients > li > * {\n\t\tmargin: 0.25rem 0;\n\t}\n\n\t.patients-editor > .patients > li > .patient-name {\n\t\tmargin-left: 2rem;\n\t}\n\n\t.patients-editor > .patients > li > .controls {\n\t\tmargin: 0;\n\t\talign-self: stretch;\n\t}\n\n\t.patients-editor > .patients > li > .controls > button {\n\t\tdisplay: block;\n\t\tborder: none;\n\t\tborder-left: 1px solid #ccc;\n\t\tborder-radius: 0;\n\t\tmargin: 0;\n\t\theight: 100%;\n\t}\n\n\t.patients-editor > .patients > li button > svg {\n\t\tvertical-align: middle;\n\t}\n\n\t.patients-editor .patient-name {\n\t\twidth: 15em;\n\t}\n\n\t.patients-editor textarea {\n\t\twidth: 10em;\n\t\theight: 2.3em;\n\t\ttext-align: center;\n\t}\n\n\t.patients-editor > .controls {\n\t\tlist-style-type: none;\n\t\tpadding-left: 0;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t}\n\n\t.patients-editor > .controls > li {\n\t\tmargin: 0 1rem;\n\t}\n\n\t.patients-editor > .controls > li > button {\n\t\tdisplay: block;\n\t}\n\n\t.patients-editor > .controls > li > button > svg {\n\t\tvertical-align: middle;\n\t}\n\n\t.icon {\n\t\twidth: 24px;\n\t\theight: 24px;\n\t\tstroke: currentColor;\n\t\tstroke-width: 2;\n\t\tstroke-linecap: round;\n\t\tstroke-linejoin: round;\n\t\tfill: none;\n\t}\n</style>\n\n<svelte:head>\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/print.css\">\n\t<style>\n\t\t.printable-patient-list {\n\t\t\tfont-size: 14px;\n\t\t\tfont-family: sans-serif;\n\t\t}\n\n\t\t.printable-patient-list .patient-info > section,\n\t\t.printable-patient-list > .patient > h2 {\n\t\t\tpadding: 0 2rem;\n\t\t}\n\n\t\t.printable-patient-list .patient-info {\n\t\t\tdisplay: grid;\n\t\t\tgrid-template: 50% 50% / 32% 32% 32%;\n\t\t\tgrid-column-gap: 2%;\n\t\t\tcolumn-rule: 1px dashed #ccc;\n\t\t}\n\n\t\t.printable-patient-list .patient-labs ul {\n\t\t\tpadding: 0;\n\t\t\tlist-style-type: none;\n\t\t}\n\n\t\t.patient-labs-boxes {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-around;\n\t\t}\n\n\t\t.printable-patient-list .patient-labs-cbc {\n\t\t\tline-height: 1.35;\n\t\t}\n\n\t\t.printable-patient-list .patient-medications ul {\n\t\t\tpadding-left: 1em;\n\t\t}\n\n\t\t.printable-patient-list > .patient > .patient-name {\n\t\t\tcolumn-span: all;\n\t\t}\n\n\t\t.printable-patient-list .patient-info > .patient-vitals {\n\t\t\tgrid-area: 1 / 1 / 2 / 2;\n\t\t}\n\n\t\t.printable-patient-list .patient-info > .patient-labs {\n\t\t\tgrid-area: 1 / 2 / 2 / 4;\n\t\t\tcolumn-count: 2;\n\t\t\tcolumn-fill: auto;\n\t\t}\n\n\t\t.printable-patient-list .patient-info > .patient-medications {\n\t\t\tgrid-area: 2 / 3 / 3 / 4;\n\t\t}\n\n\t\t.printable-patient-list table {\n\t\t\tborder-collapse: collapse;\n\t\t}\n\n\t\t.printable-patient-list .patient-vitals table {\n\t\t\twidth: 100%;\n\t\t\ttext-align: center;\n\t\t}\n\n\t\t.printable-patient-list th, .printable-patient-list td {\n\t\t\tborder: 1px solid #ccc;\n\t\t\tpadding: 0.3em;\n\t\t}\n\n\t\t@media print {\n\t\t\t@page {\n\t\t\t\tsize: letter landscape;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\n\t\t\t.patients-editor {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t\t.printable-patient-list .patient-info {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template: 50vh 50vh / 32% 32% 32%;\n\t\t\t\tgrid-column-gap: 2%;\n\t\t\t\tcolumn-rule: 1px dashed #ccc;\n\t\t\t}\n\n\t\t}\n\n\t\t/** CBC **/\n\n\t\t.patient-labs-cbc {\n\t\t\twidth: 10em;\n\t\t\ttext-align: center;\n\t\t\tposition: relative;\n\t\t\ttop: 0;\n\t\t}\n\n\t\t.patient-labs-cbc > svg {\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\twidth: 80%;\n\t\t\tmargin: 0 10%;\n\t\t\theight: 4em;\n\t\t\tvertical-align: middle;\n\t\t}\n\n\t\t.patient-labs-cbc div {\n\t\t\tdisplay: inline-block;\n\t\t}\n\n\t\t.patient-labs-cbc div:nth-of-type(1), .patient-labs-cbc div:nth-of-type(4) {\n\t\t\twidth: 100%;\n\t\t}\n\n\t\t.patient-labs-cbc div:nth-of-type(2) {\n\t\t\twidth: 33%;\n\t\t\tmargin-right: 16.5%;\n\t\t}\n\n\t\t.patient-labs-cbc div:nth-of-type(3) {\n\t\t\twidth: 33%;\n\t\t\tmargin-left: 16.5%;\n\t\t}\n\n\t\t/** BMP **/\n\n\t\t.patient-labs-bmp {\n\t\t\tposition: relative;\n\t\t\ttop: 0;\n\t\t\twidth: 12em;\n\t\t\theight: 4em;\n\t\t\ttext-align: center;\n\t\t}\n\n\t\t.patient-labs-bmp > svg {\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\theight: 4em;\n\t\t\tmargin: auto;\n\t\t}\n\n\t\t.patient-labs-bmp > table {\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tborder-collapse: collapse;\n\t\t}\n\n\t\t.patient-labs-bmp > table td {\n\t\t\twidth: 27.5%;\n\t\t\tborder: none;\n\t\t}\n\n\t\t.patient-labs-bmp > table td:last-child {\n\t\t\tvertical-align: middle;\n\t\t}\n\t</style>\n</svelte:head>\n\n<svelte:window on:load={loadFromPermalink()}/>\n\n<div class=\"patients-editor\">\n\n<ul class=\"patients\">\n\t{#each patients as patient (patient.id)}\n\t<li data-patient-id={patient.id}>\n\t\t<span class=\"patient-name\">{patient.name}</span>\n\t\t<textarea placeholder=\"Update\" on:change={updatePatient}></textarea>\n\t\tLabs\n\t\t<div class=\"controls\">\n\t\t\t<button on:click={removePatient}>\n\t\t\t\t<svg alt=\"Delete\" class=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"3 6 5 6 21 6\"></polyline><path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path><line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line></svg>\n\t\t\t</button>\n\t\t</div>\n\t</li>\n\t{/each}\n\t<li>\n\t\t<textarea placeholder=\"New Patient\" on:change={addPatient}></textarea>\n\t</li>\n</ul>\n\n<ul class=\"controls\">\n\t<li>\n\t\t<button on:click={print}>\n\t\t\t<svg alt=\"Print\" class=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"6 9 6 2 18 2 18 9\"></polyline><path d=\"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\"></path><rect x=\"6\" y=\"14\" width=\"12\" height=\"8\"></rect></svg>\n\t\t</button>\n\t</li>\n\t<li>\n\t\t<button on:click={print}>\n\t\t\t<svg alt=\"Clear\" class=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"3 6 5 6 21 6\"></polyline><path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path><line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line></svg>\n\t\t</button>\n\t</li>\n\t<li>\n\t\t<button on:click={copyPermalink}>\n\t\t\t<svg alt=\"Permalink\" class=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg>\n\t\t</button>\n\t</li>\n</ul>\n\n</div>\n\n<div class=\"printable-patient-list\"></div>\n","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flush","seen_callbacks","Set","length","shift","update","$$","pop","i","callback","has","add","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","globals","window","global","destroy_block","lookup","d","key","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","on_mount","on_destroy","context","Map","callbacks","ready","ret","hydrate","l","Array","from","childNodes","children","c","intro","m","new_on_destroy","map","filter","mount_component","Medications","[object Object]","medications","this","oldMeds","diffedMeds","med","isNew","find","isDiscontinued","medication","e","dose","route","frequency","appendDateListEntry","dateList","newEntry","dateOfEntry","date","Patient","other","vitals","ios","labs","imaging","problems","entry","today","Date","toDateString","current","old","diff","entries","JSON","stringify","parse","string","parsePatient","parseName","parseVitals","parseIOs","parseMeds","parseLabs","parseImaging","findBlock","pattern","result","match","FIND_MEDS_PATTERN","PARSE_MEDS_PATTERN","matches","matchAll","toLowerCase","FIND_VITALS_PATTERN","parseBP","rows","bps","row","trim","currentBP","sort","parseInt","min","max","FLOAT_PATTERN","findFloat","parseVitalSign","column","values","parseFloat","isNaN","Math","split","bp","temp","hr","rr","spo2","FIND_IOS_PATTERN","parseIOsValue","undefined","in","out","net","FIND_LABS_PATTERN","FIND_RESULT_PATTERN","PARSE_RESULT_PATTERN","resultHeaders","resultInfos","v","flatMap","resultHeader","resultInfo","resultName","resultTime","type","lines","MULTIPART_LABS","parseResultLine","startsWith","parseResult","resultDate","groupBy","prototype","property","groups","set","get","RESULT_VALUE_PATTERN","line","rest","qualifier","abnormality","render","h","bmp","na","cl","bun","glu","k","hco3","cr","cbc","hgb","wbc","plt","hct","findLabValue","id","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","o","n","old_indexes","new_blocks","new_lookup","deltas","child_ctx","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","nextPatientId","MONTHS","wday","month","day","year","indexOf","toString","patientID","closest","dataset","patientId","patients","patientIndex","findIndex","RENDER_PATIENT_HELPERS","toURL","encodeURIComponent","toJSON","location","pathname","fromURL","urlFragment","json","decodeURIComponent","rendered","patient","renderPatient","querySelector","innerHTML","newPatient","addDayEntry","updatedPatients","slice","addInfo","hash","detaching","destroy_component","$destroy","index","splice","body"],"mappings":"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"}